#!/usr/bin/env bash
#
# Usage:
# fuel-ssh-nodes [-e|--env N] [-c|--cmd COMMAND] ROLE
#
# creates a tmux session with windows that SSH'ed to all nodes of provided role
# (of a given Fuel environment)
# windows are named node-<node-id>
#
# tmux session is named [eN-]<role>
# 
# when ROLE is "fuel", simply opens a new session "fuel" with single window
#
# if tmux session with this name already exists - simply attaches to it
# 
# optionally executes a command in all connected nodes and stays connected
# (has meaning only when creating a new session)
#
# Also if tmux is not installed, installs it and creates ~/.tmux.conf
# with some mouse options set if such file does not exist

read -r -d '' helpmsg <<- EOM
Usage:
$0 [-e|--env N] [-c|--cmd COMMAND] ROLE
EOM

if [ -z $(which tmux) ]; then
    echo "Needs tmux installed."
    echo "$helpmsg"
    exit 1
fi

if [ -z $(which fuel) ]; then
    echo "Requires fuel client installed"
    echo "$helpmsg"
    exit 1
fi

tmux_conf=~/.tmux.conf

env=""
envcmd=""
sshcmd=""
while [[ $# > 1 ]]; do
    key="$1"
    case $key in
        -e|--env)       
            env=$2
            envcmd="--env $env"
            shift
        ;;
        -c|--cmd)
            sshcmd="$2; bash"
            shift
        ;;
        *)
            echo "Unknown option $key"
            echo "$helpmsg"
            exit 1
        ;;
    esac
shift
done

if [[ -n $1 ]]; then
    role=$1
    sessionname="${role}"
    if [ $env ]; then
        sessionname="e${env}-${sessionname}"
    fi
else
    role="fuel"
    sessionname="fuel"
fi
                
tmux_new() {
    if [ ${role} = "fuel" ]; then
        sessionname="fuel"
        tmux new-session -s ${sessionname} -d -n "fuel"
    else
        nodes=($(fuel node list ${envcmd} | grep ${role} | awk '{print $1}' | sort))
        if [ ${#nodes[@]} -eq 0 ]; then
            echo "No suitable nodes found"
            exit 1
        fi

        # open first window already ssh-ed to first applicable node
        tmux new-session -s "${sessionname}" -n node-"${nodes[0]}" -d  "ssh -t node-${nodes[0]} '$sshcmd'"
        # re-apply first window title (does not set it sometimes)
        tmux rename-window -t "${sessionname}:^" node-"${nodes[0]}"
        # open new windows ssh-ed to remaining nodes (from second to last)
        for node in ${nodes[@]:1}; do
            tmux new-window -t "${sessionname}" -n node-"${node}" -d  "ssh -t node-${node} '$sshcmd'"
        done
    fi

    tmux attach -t "${sessionname}"
}

tmux_set_options() {
    if [ ! -f $tmux_conf ]; then
        echo "creating tmux config..."
        cat > $tmux_conf << EOF
set-window-option -g mode-mouse on
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on
EOF
    fi
}

main() {
    tmux_set_options
    tmux has-session -t "${sessionname}" 2>/dev/null && tmux attach -t "${sessionname}" || tmux_new
}

main
